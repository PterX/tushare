// Code generated by protoc-gen-go-tushare. DO NOT EDIT.
// source: api/v1/hk.proto

package v1

import (
	json "encoding/json"
)

var _ = json.Decoder{}

// api name

// 港股列表 api name
const ApiHkBasic string = "hk_basic"

// 港股行情 api name
const ApiHkDaily string = "hk_daily"

// 港股分钟行情 api name
const ApiHkMins string = "hk_mins"

// 港股交易日历 api name
const ApiHkTradecal string = "hk_tradecal"

// fields

// 港股列表 fields
var FieldsHkBasic = []string{"name", "fullname", "enname", "cn_spell", "market", "list_status", "list_date", "delist_date", "trade_unit", "isin", "curr_type"}

// 港股行情 fields
var FieldsHkDaily = []string{"ts_code", "trade_date", "open", "high", "low", "close", "pre_close", "change", "pct_chg", "vol", "amount"}

// 港股分钟行情 fields
var FieldsHkMins = []string{"ts_code", "trade_time", "open", "close", "high", "low", "vol", "amount"}

// 港股交易日历 fields
var FieldsHkTradecal = []string{"cal_date", "is_open", "pretrade_date"}

// struct

// 港股列表|hk_basic
type HkBasic struct {
	Name       string  `json:"name"`        // 股票简称
	Fullname   string  `json:"fullname"`    // 公司全称
	Enname     string  `json:"enname"`      // 英文名称
	CnSpell    string  `json:"cn_spell"`    // 拼音
	Market     string  `json:"market"`      // 市场类别
	ListStatus string  `json:"list_status"` // 上市状态
	ListDate   string  `json:"list_date"`   // 上市日期
	DelistDate string  `json:"delist_date"` // 退市日期
	TradeUnit  float64 `json:"trade_unit"`  // 交易单位
	Isin       string  `json:"isin"`        // ISIN代码
	CurrType   string  `json:"curr_type"`   // 货币代码
}

type HkBasicRequest struct {
	Limit      string `json:"limit"`
	Offset     string `json:"offset"`
	TsCode     string `json:"ts_code"`     // TS代码
	ListStatus string `json:"list_status"` // 上市状态 L上市 D退市 P暂停上市 ，默认L
}

type HkBasicResponse struct {
	List []*HkBasic `json:"list"`
}

func (x *HkBasicResponse) String() string {
	bytes, _ := json.Marshal(x)
	return string(bytes)
}

// 港股行情|hk_daily
type HkDaily struct {
	TsCode    string  `json:"ts_code"`    // 股票代码
	TradeDate string  `json:"trade_date"` // 交易日期
	Open      float64 `json:"open"`       // 开盘价
	High      float64 `json:"high"`       // 最高价
	Low       float64 `json:"low"`        // 最低价
	Close     float64 `json:"close"`      // 收盘价
	PreClose  float64 `json:"pre_close"`  // 昨收价
	Change    float64 `json:"change"`     // 涨跌额
	PctChg    float64 `json:"pct_chg"`    // 涨跌幅(%)
	Vol       float64 `json:"vol"`        // 成交量(股)
	Amount    float64 `json:"amount"`     // 成交额(元)
}

type HkDailyRequest struct {
	Limit     string `json:"limit"`
	Offset    string `json:"offset"`
	TsCode    string `json:"ts_code"`    // 股票代码
	TradeDate string `json:"trade_date"` // 交易日期
	StartDate string `json:"start_date"` // 开始日期
	EndDate   string `json:"end_date"`   // 结束日期
}

type HkDailyResponse struct {
	List []*HkDaily `json:"list"`
}

func (x *HkDailyResponse) String() string {
	bytes, _ := json.Marshal(x)
	return string(bytes)
}

// 港股分钟行情|hk_mins
type HkMins struct {
	TsCode    string  `json:"ts_code"`    // 股票代码
	TradeTime string  `json:"trade_time"` // 交易时间
	Open      float64 `json:"open"`       // 开盘价
	Close     float64 `json:"close"`      // 收盘价
	High      float64 `json:"high"`       // 最高价
	Low       float64 `json:"low"`        // 最低价
	Vol       int64   `json:"vol"`        // 成交量
	Amount    float64 `json:"amount"`     // 成交金额
}

type HkMinsRequest struct {
	Limit     string `json:"limit"`
	Offset    string `json:"offset"`
	TsCode    string `json:"ts_code"`    // 股票代码，e.g.00001.HK
	Freq      string `json:"freq"`       // 分钟频度（1min/5min/15min/30min/60min）
	StartDate string `json:"start_date"` // 开始日期 格式：2023-03-13 09:00:00
	EndDate   string `json:"end_date"`   // 结束时间 格式：2023-03-13 19:00:00
}

type HkMinsResponse struct {
	List []*HkMins `json:"list"`
}

func (x *HkMinsResponse) String() string {
	bytes, _ := json.Marshal(x)
	return string(bytes)
}

// 港股交易日历|hk_tradecal
type HkTradecal struct {
	CalDate      string `json:"cal_date"`      // 日历日期
	IsOpen       int64  `json:"is_open"`       // 是否交易 '0'休市 '1'交易
	PretradeDate string `json:"pretrade_date"` // 上一个交易日
}

type HkTradecalRequest struct {
	Limit     string `json:"limit"`
	Offset    string `json:"offset"`
	StartDate string `json:"start_date"` // 开始日期
	EndDate   string `json:"end_date"`   // 结束日期
	IsOpen    string `json:"is_open"`    // 是否交易 '0'休市 '1'交易
}

type HkTradecalResponse struct {
	List []*HkTradecal `json:"list"`
}

func (x *HkTradecalResponse) String() string {
	bytes, _ := json.Marshal(x)
	return string(bytes)
}
